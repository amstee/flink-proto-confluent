// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flink/formats/proto/test/v1/test_wrapper_types.proto

// Protobuf Java Version: 3.25.3
package com.amstee.flink.formats.proto.test.v1;

public final class TestWrapperTypesProto {
  private TestWrapperTypesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_amstee_flink_formats_proto_test_v1_WrapperTypesTest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_amstee_flink_formats_proto_test_v1_WrapperTypesTest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4flink/formats/proto/test/v1/test_wrapp" +
      "er_types.proto\022\"amstee.flink.formats.pro" +
      "to.test.v1\032\036google/protobuf/wrappers.pro" +
      "to\"\300\004\n\020WrapperTypesTest\022;\n\nint32Value\030\001 " +
      "\001(\0132\033.google.protobuf.Int32ValueR\nint32V" +
      "alue\022;\n\nint64Value\030\002 \001(\0132\033.google.protob" +
      "uf.Int64ValueR\nint64Value\022>\n\013uint32Value" +
      "\030\003 \001(\0132\034.google.protobuf.UInt32ValueR\013ui" +
      "nt32Value\022>\n\013uint64Value\030\004 \001(\0132\034.google." +
      "protobuf.UInt64ValueR\013uint64Value\022;\n\nflo" +
      "atValue\030\005 \001(\0132\033.google.protobuf.FloatVal" +
      "ueR\nfloatValue\022>\n\013doubleValue\030\006 \001(\0132\034.go" +
      "ogle.protobuf.DoubleValueR\013doubleValue\0228" +
      "\n\tboolValue\030\007 \001(\0132\032.google.protobuf.Bool" +
      "ValueR\tboolValue\022>\n\013stringValue\030\010 \001(\0132\034." +
      "google.protobuf.StringValueR\013stringValue" +
      "\022;\n\nbytesValue\030\t \001(\0132\033.google.protobuf.B" +
      "ytesValueR\nbytesValueB\356\001\n&com.amstee.fli" +
      "nk.formats.proto.test.v1B\025TestWrapperTyp" +
      "esProtoP\001\242\002\005AFFPT\252\002\"Amstee.Flink.Formats" +
      ".Proto.Test.V1\312\002\"Amstee\\Flink\\Formats\\Pr" +
      "oto\\Test\\V1\342\002.Amstee\\Flink\\Formats\\Proto" +
      "\\Test\\V1\\GPBMetadata\352\002\'Amstee::Flink::Fo" +
      "rmats::Proto::Test::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
        });
    internal_static_amstee_flink_formats_proto_test_v1_WrapperTypesTest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_amstee_flink_formats_proto_test_v1_WrapperTypesTest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_amstee_flink_formats_proto_test_v1_WrapperTypesTest_descriptor,
        new java.lang.String[] { "Int32Value", "Int64Value", "Uint32Value", "Uint64Value", "FloatValue", "DoubleValue", "BoolValue", "StringValue", "BytesValue", });
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
